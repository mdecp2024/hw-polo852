var tipuesearch = {"pages": [{'title': 'About', 'text': '國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n cp2024 計算機程式 \n 課程教材: \n Learn Python with Jupyter  ( site ,  ebook ) \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入  https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼:\xa0 \n 個人倉儲: https://mdecp2024.github.io/hw-polo852/content/index.html \n 個人網站:  https://mdecp2024.github.io/hw-41323238 \n 其他資訊: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n', 'tags': '', 'url': 'About.html'}, {'title': 'Attendance', 'text': '出席 (10%) - 自行舉證評分 \n 自行利用 Github commits 提交記錄評分. \n', 'tags': '', 'url': 'Attendance.html'}, {'title': 'HW 1', 'text': '主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%) \n USB 隨身碟: \n 下載  python_2025_lite.7z  (428 MB, 解開壓縮後約 1.5 GB) \n Jupyter \n What are Github and Codespaces? \n Hello World - GitHub Docs \n 利用包含學號的字串作為帳號, 申請免費使用 Github. \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 1 \n \n PART 1: Creating the basics 資料整理 (10%) \n 啟動可攜程式系統後, 在命令列中: \n y:\\>cd notebook \n y:\\notebook>jupyter lab --collaborative \n 進入  01_string_input_print.ipynb  練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過  https://nbviewer.org/  將已經提交的  01_string_input_print.ipynb , 嵌入下列網頁中. \n \n 上列 iframe 標註的 html 語法: \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 1.html'}, {'title': 'HW 1 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n \n W10 \n', 'tags': '', 'url': 'HW 1 Exam.html'}, {'title': '第一題', 'text': '\n', 'tags': '', 'url': '第一題.html'}, {'title': '第二題', 'text': '\n', 'tags': '', 'url': '第二題.html'}, {'title': '第三題', 'text': '', 'tags': '', 'url': '第三題.html'}, {'title': '且學會了用程式寫出微積分及物理的算式，希望考試都能用。', 'text': '\n HW 2 \n 主題: Python 的數列、判斷式與重複迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%): \n PART 2: Introduction to lists and if/else statements \n PART 3: Introduction to the for loop \n 完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.w16_exam1 \n w16_exam1 \n exam1 \n from browser import document, html\nimport math\n \n# 初始化 HTML，確保 canvas 元素存在\ndef setup_canvas():\n    if not document.querySelector("#my_canvas"):\n        canvas = html.CANVAS(id="my_canvas", width=800, height=600)\n        document <= canvas\n \nsetup_canvas()\n\n# Set up canvas\ncanvas = document["my_canvas"]\nctx = canvas.getContext("2d")\n\n# Set origin (32, 38)\norigin_x, origin_y = 32, 38\n\n# Draw X-axis\nctx.beginPath()\nctx.moveTo(origin_x, origin_y)\nctx.lineTo(500, origin_y)\nctx.strokeStyle = "black"\nctx.lineWidth = 2\nctx.stroke()\n\n# Draw Y-axis\nctx.beginPath()\nctx.moveTo(origin_x, origin_y)\nctx.lineTo(origin_x, 300)\nctx.stroke()\n\n# Label origin\nctx.font = "12px Arial"\nctx.fillStyle = "black"\nctx.fillText("(32, 38)", origin_x + 5, origin_y - 5)\n\n# Draw shapes\n# Adjusted placement to fix alignment issue\n\n# Hexagon (Orange)\nhex_x, hex_y = 100, 100\nctx.beginPath()\nfor i in range(6):\n    angle = i * (2 * math.pi / 6)\n    x = hex_x + 30 * math.cos(angle)\n    y = hex_y + 30 * math.sin(angle)\n    if i == 0:\n        ctx.moveTo(x, y)\n    else:\n        ctx.lineTo(x, y)\nctx.closePath()\nctx.fillStyle = "orange"\nctx.fill()\n\n# Diamond (Teal)\nctx.beginPath()\nctx.moveTo(160, 70)\nctx.lineTo(180, 100)\nctx.lineTo(160, 130)\nctx.lineTo(140, 100)\nctx.closePath()\nctx.fillStyle = "teal"\nctx.fill()\n\n# Triangle (Teal)\nctx.beginPath()\nctx.moveTo(165, 130)\nctx.lineTo(205, 130)\nctx.lineTo(185, 100)\nctx.closePath()\nctx.fillStyle = "blue"\nctx.fill()\n\n# Circle (Pink)\nctx.beginPath()\nctx.arc(230, 100, 30, 0, 2 * math.pi)\nctx.fillStyle = "pink"\nctx.fill()\n\n# Square (Yellow)\nctx.beginPath()\nctx.rect(265, 75, 50, 50)\nctx.fillStyle = "yellow"\nctx.fill()\n\n# Rectangle (Blue)\nctx.beginPath()\nctx.rect(320, 90, 60, 20)\nctx.fillStyle = "Blue"\nctx.fill() \n HW 2 Exam', 'tags': '', 'url': '且學會了用程式寫出微積分及物理的算式，希望考試都能用。.html'}, {'title': 'HW 2', 'text': '主題: Python 的數列、判斷式與重複迴圈 (20%) \n Python 課程教材: \xa0 https://www.learnpythonwithjupyter.com/ \xa0 - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%): \n PART 2: Introduction to lists and if/else statements \n PART 3: Introduction to the for loop \n 完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.', 'tags': '', 'url': 'HW 2.html'}, {'title': 'HW 2 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n \n', 'tags': '', 'url': 'HW 2 Exam.html'}, {'title': 'HW 3', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n \n \n \n \n \n \n \n \n \n \n HW 2 Exam \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'HW 3.html'}, {'title': 'HW 3 Exam', 'text': '', 'tags': '', 'url': 'HW 3 Exam.html'}, {'title': 'w16_exam2', 'text': '第二題 \n \n', 'tags': '', 'url': 'w16_exam2.html'}, {'title': 'w16_exam1', 'text': '第一題解答 \n 第 \n \n', 'tags': '', 'url': 'w16_exam1.html'}, {'title': 'w7', 'text': '', 'tags': '', 'url': 'w7.html'}, {'title': 'w15', 'text': '題目一: 請利用 Gist 與 Brython 程式環境, 在個人的課程網站中新增一個頁面, 標題為 w15, 以"從 1 累加到 100"作為 anchor 的連結標題, 使用者點擊該連結之後, 可從各自的 Brython 頁面執行程式. \n 1到100 \n 題目二: \xa0延伸上題, 設計一個函式 addto(1, 100), 可以完成上述的累加結果. (以"addto"作為連結標題) \n addto \n 題目三: 延伸上題, 設計一個函式 add_only_even(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加結果. 頁面中請以\xa0 add_only_even 作為連結 \n add_only_even \n 題目四: 延伸上題, 設計一個函式 add_avoid_8(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加過程, 必須避開數字出現"8"的整數,\xa0頁面中請以\xa0add_avoid_8 作為連結標題. \n add_avoid_8 \n w16_exam1 \n 題目一: 請利用 Gist 與 Brython 程式環境, 在個人的課程網站中新增一個頁面, 標題為 w15, 以"從 1 累加到 100"作為 anchor 的連結標題, 使用者點擊該連結之後, 可從各自的 Brython 頁面執行程式. \n 1到100 \n 題目二: \xa0延伸上題, 設計一個函式 addto(1, 100), 可以完成上述的累加結果. (以"addto"作為連結標題) \n addto \n 題目三: 延伸上題, 設計一個函式 add_only_even(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加結果. 頁面中請以\xa0 add_only_even 作為連結 \n add_only_even \n 題目四: 延伸上題, 設計一個函式 add_avoid_8(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加過程, 必須避開數字出現"8"的整數,\xa0頁面中請以\xa0add_avoid_8 作為連結標題. \n add_avoid_8 \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w13_hw', 'text': '我利用了brython的程式做出了，兩個圓圈加內切正方加上每個空格塗顏色還有斜線，且還認識冷門的顏色英文。 \n \n \n \n \n \n \n \n \n \n \n \n \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n \n', 'tags': '', 'url': 'w13_hw.html'}, {'title': 'w11_hw', 'text': '第一題 \n import math \n # 10x10 矩陣的寬高 width = 10 height = 10 \n # 圓心 h = 5 k = 5 \n # 半徑 r = 4 \n # 生成 10x10 的圓形 for y in range(height):  for x in range(width):  # 計算 (x, y) 與圓心 (h, k) 之間的距離  distance = math.sqrt((x - h)**2 + (y - k)**2)    # 如果距離小於或等於半徑，就繪製 \'*\'  if distance <= r:  print(\'*\', end=\'\')  else:  print(\' \', end=\'\')  print() \n 第二題 \n from browser import document, html import math \n # 設置畫布 canvas = html.CANVAS(width=300, height=300) document <= canvas \n # 繪製 10x10 方格的尺寸 cell_size = 30 width = 10 height = 10 \n # 圓心與半徑 h, k = 5, 5 # 圓心座標 r = 4 # 半徑 \n # 取得 canvas 的 context 來進行繪圖 ctx = canvas.getContext("2d") \n # 繪製 10x10 的方格 for y in range(height):  for x in range(width):  ctx.rect(x * cell_size, y * cell_size, cell_size, cell_size)  ctx.strokeStyle = "black"  ctx.stroke() \n # 繪製圓形邊界 for y in range(height):  for x in range(width):  # 計算該格子中心到圓心的距離  distance = math.sqrt((x - h)**2 + (y - k)**2)    # 判斷這個格子是否在圓形範圍內  if distance <= r:  ctx.fillStyle = "black"  ctx.fillRect(x * cell_size, y * cell_size, cell_size, cell_size) \n 影片 \n \n 心得 \n 這次的作業用Chat Gpt製作寫程式，本人覺得透過AI的方式程作業是一種不錯的方式 \n \n 格子上有線 \n \n \n', 'tags': '', 'url': 'w11_hw.html'}, {'title': 'w12_hw', 'text': '用Brython寫的程式 \n n = 11 #總共的行數 space = \'_\' center = n//2 #print(center) \n for y in range(n):  for x in range(n):  print("(", x,", ", y, ")", sep="") \n 用 Brython 以及 Jupyter lab\xa0 影片 \n \n \n 心得 \n 用Brython 以及 Jupyter lab程式寫出來 ，學到了不同方式。所謂的山不轉路轉、路不轉人轉這種道理一樣或許用 Brython\xa0不能用時可以使用Jupyter lab將程式寫出來 \n \n \n', 'tags': '', 'url': 'w12_hw.html'}, {'title': 'HW 4', 'text': '主題: 利用 Python 控制機電模擬系統 (20%) \n 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件 \n 利用  CoppeliaSim  建立機電模擬系統 \n 利用  Python  跨網路控制瀏覽器上的機電模擬系統 \n 範例: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中. \n w16_exam2', 'tags': '', 'url': 'HW 4.html'}, {'title': 'HW 4 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 4 Exam.html'}, {'title': 'Final Report', 'text': '期末口頭與書面專題報告 (20%) \n 期末口頭專題報告影片: \n ...... \n 期末書面專題報告檔案 (pdf): \n ...... \n 電腦輔助設計與實習課程總結心得: \n ...... \n 期末報告自評成績: \n 完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'Final Report.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};